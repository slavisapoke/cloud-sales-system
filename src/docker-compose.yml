version: '3.4'

services:
  customer-api:
    image: ${DOCKER_REGISTRY-}customer-api
    build:
      context: .
      dockerfile: Microservices/Poke.CloudSalesSystem.Customers/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - SEQ_SERVER=seq
      - ConnectionStrings__Postgres=Host=customer-postgres;Port=5432;Database=customersDb;Username=guest;Password=guest
    ports:
      - 7001:80    
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro   
   
  accounts-api:
    image: ${DOCKER_REGISTRY-}accounts-api
    build:
      context: .
      dockerfile: Microservices/Poke.CloudSalesSystem.Accounts/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - SEQ_SERVER=seq
      - ConnectionStrings__Postgres=Host=accounts-postgres;Port=5432;Database=accountsDb;Username=guest;Password=guest
    ports:
      - 7002:80
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      
  licence-api:
    image: ${DOCKER_REGISTRY-}licence-api
    build:
      context: .
      dockerfile: Microservices/Poke.CloudSalesSystem.Licences/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - SEQ_SERVER=seq
      - ConnectionStrings__Postgres=Host=licences-postgres;Port=5432;Database=licencesDb;Username=guest;Password=guest
    ports:
      - 7003:80    
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro  
      
  product-api:
    image: ${DOCKER_REGISTRY-}product-api
    build:
      context: .
      dockerfile: Microservices/Poke.CloudSalesSystem.Products/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - SEQ_SERVER=seq
      - RedisConfiguration__Host=cache
      - RedisConfiguration__Port=6379
      - CachingConfiguration__InstanceName=products
      - CachingConfiguration__MemoryCacheGlobalDurationInSeconds=5
      - CachingConfiguration__SkipGlobalMemoryCache=false
    ports:
      - 7004:80      
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro   
    depends_on:
      - cache
      
  gateway:
    image: ${DOCKER_REGISTRY-}gateway
    build:
      context: .
      dockerfile: Poke.CloudSalesSystem.Gateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - SEQ_SERVER=seq
      - ServicesConfiguration__CustomerServiceBaseUrl=http://customer-api
      - ServicesConfiguration__AccountServiceBaseUrl=http://accounts-api
      - ServicesConfiguration__LicenceServiceBaseUrl=http://licence-api
      - ServicesConfiguration__ProductServiceBaseUrl=http://product-api
    ports:
      - 7000:80    
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro   

##### LOGGER #####
  seq:
    image: datalust/seq
    container_name: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 8089:80
    volumes:
      - ./.containers/seq:/data
      
##### DATABASE #####
  customer-postgres:
    image: postgres
    environment:
      POSTGRES_USER: guest
      POSTGRES_PASSWORD: guest
      POSTGRES_DB: customersDb
    ports:
      - 6432:5432  
    volumes:
      - postgres-customer-data:/var/lib/postgresql/data 
  accounts-postgres:
    image: postgres
    environment:
      POSTGRES_USER: guest
      POSTGRES_PASSWORD: guest
      POSTGRES_DB: accountsDb
    ports:
      - 7432:5432  
    volumes:
      - postgres-accounts-data:/var/lib/postgresql/data 
  licences-postgres:
    image: postgres
    environment:
      POSTGRES_USER: guest
      POSTGRES_PASSWORD: guest
      POSTGRES_DB: licencesDb
    ports:
      - 8432:5432  
    volumes:
      - postgres-licences-data:/var/lib/postgresql/data 

##### MESSAGE BROKER #####
  rabbitmq:
    image: "rabbitmq:management"  # Official RabbitMQ image with the management plugin enabled
    ports:
      - 5672:5672  # app connection port
      - 15672:15672   # management interface
    environment:
      - RABBITMQ_DEFAULT_USER=guest 
      - RABBITMQ_DEFAULT_PASS=guest 
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  # Mount a Docker volume for RabbitMQ data

##### DISTRIBUTED CACHE #####
  cache:
    image: "redis:alpine"
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data      

volumes:
  redis-data:
  postgres-customer-data:
  postgres-accounts-data:
  postgres-licences-data: