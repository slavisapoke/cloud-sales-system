// <auto-generated />
using System;
using Infrastructure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Poke.CloudSalesSystem.Licences.Infrastructure.Migrations
{
    [DbContext(typeof(LicencesDbContext))]
    [Migration("20250408235407_InitializeData")]
    partial class InitializeData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Poke.CloudSalesSystem.Licences.Domain.Model.LicenceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("accountId");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdOn");

                    b.Property<Guid>("ExternalLicenceId")
                        .HasColumnType("uuid")
                        .HasColumnName("externalLicenceId");

                    b.Property<Guid>("ExternalSubscriptionId")
                        .HasColumnType("uuid")
                        .HasColumnName("externalSubscriptionId");

                    b.Property<string>("LicenceKey")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("licenceKey");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifiedOn");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uuid")
                        .HasColumnName("subscriptionId");

                    b.Property<DateTimeOffset?>("ValidTo")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("validTo");

                    b.HasKey("Id")
                        .HasName("pK_licences");

                    b.HasIndex("SubscriptionId")
                        .HasDatabaseName("iX_licences_subscriptionId");

                    b.ToTable("licences", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("230950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("a511a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b337547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "VDKI2-QIA3U-H3SFG-89NTT",
                            Status = 1,
                            SubscriptionId = new Guid("2284eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 9, 6, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(403), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("240950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("a611a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b337547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "KT5RN-GV831-Z1BQN-BD0HY",
                            Status = 1,
                            SubscriptionId = new Guid("2284eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 11, 3, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(443), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("250950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("a711a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b337547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "KQ3I9-V564Y-0UT75-JLB4I",
                            Status = 1,
                            SubscriptionId = new Guid("2284eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 8, 19, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(454), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("260950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("a811a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b337547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "2YYVB-9U82C-U22Q4-HUKFD",
                            Status = 1,
                            SubscriptionId = new Guid("2284eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 10, 29, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(464), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("270950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("a911a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b337547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "LSAN4-LGTIG-D58R8-ML4QA",
                            Status = 1,
                            SubscriptionId = new Guid("2284eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 12, 22, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(473), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("280950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("aa11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b437547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "6XT8I-OY6TG-W4TY9-CZIFY",
                            Status = 1,
                            SubscriptionId = new Guid("2384eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 7, 25, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(489), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("290950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("ab11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b437547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "LWWC2-74Q76-3BD6I-P0RB0",
                            Status = 1,
                            SubscriptionId = new Guid("2384eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 11, 2, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(546), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("2a0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("ac11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b437547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "EDKKN-IFNKX-E2ED9-HFK0X",
                            Status = 1,
                            SubscriptionId = new Guid("2384eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 12, 12, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(557), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("2b0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("ad11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b437547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "JJLPP-M1KV1-OS0C8-O1KGI",
                            Status = 1,
                            SubscriptionId = new Guid("2384eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 7, 27, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(566), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("2c0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("ae11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b437547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "DSXKM-MHO5K-22K52-B81OE",
                            Status = 1,
                            SubscriptionId = new Guid("2384eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 7, 6, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(577), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("2d0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("af11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b437547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "YGQPN-EEVHY-I7R4G-O966H",
                            Status = 1,
                            SubscriptionId = new Guid("2384eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 6, 6, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(586), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("2e0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("b011a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b437547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "IN18K-0K5SR-9LLVI-E80LK",
                            Status = 1,
                            SubscriptionId = new Guid("2384eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 5, 18, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(594), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("2f0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("b111a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b437547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "T21MH-0OA5D-48T89-LS26W",
                            Status = 1,
                            SubscriptionId = new Guid("2384eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 5, 27, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(603), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("300950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("b211a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b437547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "0UJ95-M3MBS-0B1YX-UZ8KV",
                            Status = 1,
                            SubscriptionId = new Guid("2384eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2026, 1, 16, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(644), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("310950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("b311a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b437547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "M68NE-KIRBL-Y7RJG-MH7DS",
                            Status = 1,
                            SubscriptionId = new Guid("2384eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 6, 23, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(654), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("320950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("b411a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "VGBZ7-OR19Q-MM3JK-4OFAL",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 8, 13, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(667), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("330950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("b511a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "VML18-7J3LE-I5R6W-H17C1",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 12, 25, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(679), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("340950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("b611a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "F42FM-LTS98-XG041-MPGID",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 12, 17, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(690), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("350950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("b711a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "8RE3W-7DDYD-8BIIK-8PKNL",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 10, 24, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(699), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("360950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("b811a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "UAQS7-ORM5P-AIJRY-U2JC7",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 5, 29, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(707), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("370950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("b911a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "JRD3I-4N8II-O5WC7-PMPL7",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 8, 9, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(716), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("380950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("ba11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "F2CTN-8T3LX-JEN90-Y92Z7",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 6, 27, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(751), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("390950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("bb11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "O2VRQ-95A5K-8DYX6-XJLVA",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 7, 12, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(762), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("3a0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("bc11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "51HBG-BLYG4-Q4XZD-UV6ZO",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 5, 27, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(771), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("3b0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("bd11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "VOW7M-P2Q61-MWH5Z-01IWU",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 12, 20, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(780), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("3c0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("be11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "2M3A0-TSXDL-AU84V-8M9X7",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 6, 22, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(789), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("3d0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("bf11a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "BBGP6-OI9ZJ-5TJZ3-EFZSO",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 8, 18, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(797), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("3e0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("c011a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "JVJLR-IFCDS-P32LO-ID5R3",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 12, 16, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(806), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("3f0950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("c111a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "2LTVF-PC0US-PHOYS-UBF7W",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 6, 22, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(838), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("400950e0-fb93-406d-bf9d-61aee5de4506"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalLicenceId = new Guid("c211a5be-f12d-4ce5-999e-9f6623de4d54"),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            LicenceKey = "WKLUE-NB52B-BSW4B-7G61R",
                            Status = 1,
                            SubscriptionId = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            ValidTo = new DateTimeOffset(new DateTime(2025, 7, 10, 23, 54, 6, 797, DateTimeKind.Unspecified).AddTicks(848), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Poke.CloudSalesSystem.Licences.Domain.Model.ServiceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdOn");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("uuid")
                        .HasColumnName("providerId");

                    b.HasKey("Id")
                        .HasName("pK_services");

                    b.ToTable("services", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d284eb26-9d42-4c16-89cb-ce75e0ab5afa"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Service 1 description...",
                            Name = "Service 1",
                            ProviderId = new Guid("d484eb26-9d42-4c16-89cb-ce75e0ab5afa")
                        },
                        new
                        {
                            Id = new Guid("d384eb26-9d42-4c16-89cb-ce75e0ab5afa"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Service 2 description...",
                            Name = "Service 2",
                            ProviderId = new Guid("d484eb26-9d42-4c16-89cb-ce75e0ab5afa")
                        });
                });

            modelBuilder.Entity("Poke.CloudSalesSystem.Licences.Domain.Model.SubscriptionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("accountId");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdOn");

                    b.Property<Guid>("ExternalSubscriptionId")
                        .HasColumnType("uuid")
                        .HasColumnName("externalSubscriptionId");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifiedOn");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uuid")
                        .HasColumnName("serviceId");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("serviceName");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pK_subscriptions");

                    b.HasIndex("ServiceId")
                        .HasDatabaseName("iX_subscriptions_serviceId");

                    b.ToTable("subscriptions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2284eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalSubscriptionId = new Guid("b337547d-4f1c-4b17-b464-8e4e28899a8b"),
                            Quantity = 5,
                            ServiceId = new Guid("d284eb26-9d42-4c16-89cb-ce75e0ab5afa"),
                            ServiceName = "Service 1 name...",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2384eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            AccountId = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalSubscriptionId = new Guid("b437547d-4f1c-4b17-b464-8e4e28899a8b"),
                            Quantity = 10,
                            ServiceId = new Guid("d284eb26-9d42-4c16-89cb-ce75e0ab5afa"),
                            ServiceName = "Service 1 name...",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2484eda3-29ec-4bf1-b077-225a2bcbfdc1"),
                            AccountId = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalSubscriptionId = new Guid("b537547d-4f1c-4b17-b464-8e4e28899a8b"),
                            Quantity = 15,
                            ServiceId = new Guid("d284eb26-9d42-4c16-89cb-ce75e0ab5afa"),
                            ServiceName = "Service 1 name...",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Poke.CloudSalesSystem.Licences.Domain.Model.LicenceEntity", b =>
                {
                    b.HasOne("Poke.CloudSalesSystem.Licences.Domain.Model.SubscriptionEntity", "Subscription")
                        .WithMany("Licences")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fK_licences_subscriptionEntity_subscriptionId");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Poke.CloudSalesSystem.Licences.Domain.Model.SubscriptionEntity", b =>
                {
                    b.HasOne("Poke.CloudSalesSystem.Licences.Domain.Model.ServiceEntity", "Service")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fK_subscriptions_services_serviceId");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Poke.CloudSalesSystem.Licences.Domain.Model.ServiceEntity", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Poke.CloudSalesSystem.Licences.Domain.Model.SubscriptionEntity", b =>
                {
                    b.Navigation("Licences");
                });
#pragma warning restore 612, 618
        }
    }
}
