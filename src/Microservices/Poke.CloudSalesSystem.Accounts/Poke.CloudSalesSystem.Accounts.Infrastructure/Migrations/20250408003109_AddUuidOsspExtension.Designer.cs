// <auto-generated />
using System;
using Infrastructure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Poke.CloudSalesSystem.Accounts.Infrastructure.Migrations
{
    [DbContext(typeof(AccountsDbContext))]
    [Migration("20250408003109_AddUuidOsspExtension")]
    partial class AddUuidOsspExtension
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Poke.CloudSalesSystem.Accounts.Domain.Model.AccountEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdOn");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customerId");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("pK_accounts");

                    b.ToTable("accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("61db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerId = new Guid("43c8a677-2345-4ba2-993e-46668d76ab6e"),
                            Name = "account_uno@zika.com",
                            Phone = "123456"
                        },
                        new
                        {
                            Id = new Guid("62db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerId = new Guid("43c8a677-2345-4ba2-993e-46668d76ab6e"),
                            Name = "account_due@zika.com",
                            Phone = "223332"
                        },
                        new
                        {
                            Id = new Guid("63db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerId = new Guid("43c8a677-2345-4ba2-993e-46668d76ab6e"),
                            Name = "account_tre@zika.com",
                            Phone = "234254"
                        },
                        new
                        {
                            Id = new Guid("64db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerId = new Guid("43c8a677-2345-4ba2-993e-46668d76ab6e"),
                            Name = "account_quattro@zika.com",
                            Phone = "6455645645"
                        },
                        new
                        {
                            Id = new Guid("65db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerId = new Guid("43c8a677-2345-4ba2-993e-46668d76ab6e"),
                            Name = "account_cinque@zika.com",
                            Phone = "2342333"
                        },
                        new
                        {
                            Id = new Guid("66db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerId = new Guid("86ddb9e8-3c41-4774-aace-4289afb73eeb"),
                            Name = "account_sei@zika.com",
                            Phone = "2233545332"
                        },
                        new
                        {
                            Id = new Guid("67db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerId = new Guid("86ddb9e8-3c41-4774-aace-4289afb73eeb"),
                            Name = "account_sette@zika.com",
                            Phone = "23423434"
                        },
                        new
                        {
                            Id = new Guid("68db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerId = new Guid("86ddb9e8-3c41-4774-aace-4289afb73eeb"),
                            Name = "account_otto@zika.com",
                            Phone = "4566655"
                        },
                        new
                        {
                            Id = new Guid("69db564e-5ef0-4614-9127-562a8b2856db"),
                            CreatedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerId = new Guid("86ddb9e8-3c41-4774-aace-4289afb73eeb"),
                            Name = "account_nove@zika.com",
                            Phone = "2342342"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
